{"version":3,"sources":["services/api.js","pages/main/Main.js","App.js","reportWebVitals.js","index.js"],"names":["api","axios","create","baseURL","Sider","Layout","Content","Panel","Collapse","assetsMedias","Map","assetsStable","assetsAlert","assetsCritical","Main","useState","companies","setCompanies","setAssets","useEffect","get","then","a","response","compsList","data","index","length","_id","company","push","assets","assetsList","asset","healthscore","chartOptions","title","text","xAxis","categories","series","handleUnitClick","x","units","soma","unit","y","assetsData","unitMedia","set","className","style","backgroundColor","map","bordered","name","headStyle","fontSize","fontWeight","Item","label","address","state","city","streetAddress","postalCode","phone","id","ghost","header","showArrow","onChange","description","model","color","status","value","precision","valueStyle","prefix","ArrowUpOutlined","ArrowDownOutlined","suffix","width","height","position","highcharts","Highcharts","options","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3747d1f8.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst api = axios.create({\n  baseURL: 'http://localhost:3001/',\n});\n\nexport default api;\n","import React, { useState, useEffect } from 'react';\nimport 'antd/dist/antd.css';\nimport './main.css';\nimport api from '../../services/api';\nimport Highcharts from 'highcharts';\nimport HighchartsReact from 'highcharts-react-official';\nimport { ArrowUpOutlined, ArrowDownOutlined } from '@ant-design/icons';\n\nimport {\n  Layout,\n  PageHeader,\n  Card,\n  Descriptions,\n  Collapse,\n  Col,\n  Statistic,\n} from 'antd';\n\nconst { Sider, Content } = Layout;\n\nconst { Panel } = Collapse;\nconst assetsMedias = new Map();\nconst assetsStable = [];\nconst assetsAlert = [];\nconst assetsCritical = [];\n\nfunction Main() {\n  const [companies, setCompanies] = useState([]);\n  const [assets, setAssets] = useState([]);\n\n  useEffect(() => {\n    api.get('/companies').then(async (response) => {\n      const companies = [];\n      const compsList = response.data;\n\n      for (let index = 0; index < compsList.length; index++) {\n        const company = await api.get(`/companies/${compsList[index]._id}`);\n        if (company !== null || company !== undefined) {\n        }\n        companies.push(company);\n      }\n      setCompanies(companies);\n    });\n\n    api.get('/assets').then(async (response) => {\n      const assets = [];\n      const assetsList = response.data;\n\n      for (let index = 0; index < assetsList.length; index++) {\n        const asset = assetsList[index];\n        if (asset.healthscore >= 80) assetsStable.push(asset);\n        else if (asset.healthscore >= 60) assetsAlert.push(asset);\n        else assetsCritical.push(asset);\n      }\n      setAssets(assets);\n    });\n  }, []);\n\n  const chartOptions = {\n    title: {\n      text: 'Ativos',\n    },\n    xAxis: {\n      categories: ['Estável', 'Em Alerta ', 'Crítico'],\n    },\n\n    series: [\n      {\n        data: [assetsStable.length, assetsAlert.length, assetsCritical.length],\n      },\n    ],\n  };\n\n  function handleUnitClick() {\n    for (let index = 0; index < companies.length; index++) {\n      const company = companies[index].data;\n\n      for (let x = 0; x < company.units.length; x++) {\n        let soma = 0;\n        const unit = company.units[x];\n        for (let y = 0; y < unit.data.assetsData.length; y++) {\n          let asset = unit.data.assetsData[y];\n\n          soma += asset.healthscore;\n        }\n        let unitMedia = soma / unit.data.assetsData.length;\n        assetsMedias.set(`${unit._id}`, unitMedia);\n      }\n    }\n  }\n\n  return (\n    <div>\n      <Layout>\n        <PageHeader\n          className='site-page-header'\n          title='TRACTIAN - Empresas Cadastradas'\n          style={{ backgroundColor: '#839b97' }}\n        />\n        <Layout>\n          <Content>\n            <div className='site-card-wrapper'>\n              {companies.map((company) => (\n                <Card\n                  key={company._id}\n                  bordered={true}\n                  title={company.data.name}\n                  className='cardTitle'\n                  headStyle={{\n                    fontSize: '20px',\n                    fontWeight: 'bold',\n                    backgroundColor: '#f2dcbb',\n                  }}\n                  style={{ backgroundColor: '#ececec' }}\n                >\n                  <Descriptions key={company.data._id}>\n                    <Descriptions.Item label='Estado'>\n                      {company.data.address.state}\n                    </Descriptions.Item>\n                    <Descriptions.Item label='Cidade'>\n                      {company.data.address.city}\n                    </Descriptions.Item>\n                    <Descriptions.Item label='Rua'>\n                      {company.data.address.streetAddress}\n                    </Descriptions.Item>\n                    <Descriptions.Item label='CEP'>\n                      {company.data.address.postalCode}\n                    </Descriptions.Item>\n                    <Descriptions.Item label='Contato'>\n                      {company.data.phone}\n                    </Descriptions.Item>\n                  </Descriptions>\n                  <Card\n                    title='Unidades'\n                    id='unitCard'\n                    headStyle={{\n                      fontWeight: 'bold',\n                      fontSize: '20px',\n                      backgroundColor: '#f9f7cf',\n                    }}\n                  >\n                    {company.data.units.map((unit) => (\n                      <Collapse key={unit._id} ghost>\n                        <Panel\n                          style={{ fontSize: '20px' }}\n                          header={unit.name}\n                          key='1'\n                          showArrow={false}\n                          className='panelTitle'\n                          id='assetName'\n                          onChange={handleUnitClick(unit._id)}\n                        >\n                          <>\n                            {unit.data.assetsData.map((asset) => (\n                              <Collapse key={asset._id} ghost>\n                                <Panel\n                                  header={asset.name}\n                                  className='panelTitle'\n                                  style={{\n                                    fontSize: '17px',\n                                    fontWeight: 'normal',\n                                  }}\n                                >\n                                  <div id='divAssets'>\n                                    <p>Descrição: {asset.description}</p>\n                                    <p>Modelo: {asset.model.name}</p>\n                                    <p>\n                                      Descrição do Modelo:{' '}\n                                      {asset.model.description}\n                                    </p>\n                                  </div>\n                                  <div>\n                                    <p>\n                                      Status do Ativo:{' '}\n                                      <strong\n                                        style={{\n                                          color: `${\n                                            asset.status === 'available'\n                                              ? '#a4b787'\n                                              : asset.status === 'maintenance'\n                                              ? '#f5a25d'\n                                              : '#ce6262'\n                                          }`,\n                                        }}\n                                      >\n                                        {asset.status === 'available'\n                                          ? 'Disponível'\n                                          : asset.status === 'maintenance'\n                                          ? 'Em manutenção'\n                                          : 'Desativado'}\n                                      </strong>\n                                    </p>\n                                  </div>\n                                  <Statistic\n                                    title='Nível de Saúde do Ativo'\n                                    value={asset.healthscore}\n                                    precision={2}\n                                    valueStyle={{\n                                      color: `${\n                                        asset.healthscore >= 50\n                                          ? '#3f8600'\n                                          : '#cf1322'\n                                      }`,\n                                      fontSize: '18px',\n                                    }}\n                                    prefix={\n                                      asset.healthscore > 50 ? (\n                                        <ArrowUpOutlined />\n                                      ) : (\n                                        <ArrowDownOutlined />\n                                      )\n                                    }\n                                    suffix=''\n                                  />\n                                </Panel>\n                              </Collapse>\n                            ))}\n                          </>\n                          <br />\n                          <Col id='colAssetsMedia'>\n                            <Statistic\n                              title='Média do Nível de Saúde dos Ativos da Unidade'\n                              value={\n                                assetsMedias.get(unit._id) ||\n                                'Unidade sem ativos'\n                              }\n                              precision={2}\n                              valueStyle={\n                                assetsMedias.get(unit._id) > 50\n                                  ? { color: '#3f8600' }\n                                  : { color: '#cf1322' }\n                              }\n                              prefix={\n                                assetsMedias.get(unit._id) > 50 ? (\n                                  <ArrowUpOutlined />\n                                ) : (\n                                  <ArrowDownOutlined />\n                                )\n                              }\n                            />\n                          </Col>\n                          <br />\n                        </Panel>\n                      </Collapse>\n                    ))}\n                  </Card>\n                </Card>\n              ))}\n            </div>\n          </Content>\n          <Sider width='35%' height='100%' className='sider'>\n            <div\n              id='siderDiv'\n              className='site-card-wrapper'\n              style={{\n                position: 'fixed',\n              }}\n            >\n              <HighchartsReact highcharts={Highcharts} options={chartOptions} />\n            </div>\n          </Sider>\n        </Layout>\n      </Layout>\n    </div>\n  );\n}\n\nexport default Main;\n","import './App.css';\nimport Main from './pages/main/Main';\nfunction App() {\n  return (\n    <div className='App'>\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}